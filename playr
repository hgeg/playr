#!/usr/bin/env python
import requests,re,sys,subprocess,socket,youtube_dl
from flask import Flask,request,render_template
from flup.server.fcgi import WSGIServer
app = Flask(__name__)
yturl = r'(?:http(?:s|)://){0,1}(?:www.){0,1}youtu(?:\.be|be\.com)/(?:watch\?v=)([^\?&=]*)'
trurl = r'(http(?:s|)://[^"]*torrent[^"]*)'

@app.route("/playr/",methods = ['GET','POST'])
def play():
  if request.method == 'POST':
    try:
      url = request.form['url']
      url = url if 'http' in url else 'http://%s'%url
      if re.match(trurl,url):
        subprocess.Popen(['screen','-S','torrentor','./run/torrentor',url])
        return 'ok - type: torrent'
      try:
        ydl = youtube_dl.YoutubeDL({'outtmpl': '%(id)s%(ext)s'})
        ydl.add_default_info_extractors()
        result = ydl.extract_info(url,download=False)
        if 'entries' in result: video = result['entries'][0]
        else: video = result
        vurl = video['url']
      except:
        url = re.findall(r'<iframe [^>]*src=(?:"|\')([^\'"]*(?:mail\.ru|vk)[^\'"]*)(?:"|\')[^>]*',requests.get(url).text)[0]
        if 'mail.ru' in url:
          vdict = dict(re.findall(r'(hd|md|sd): "([^"]*)"',requests.get(url).text))
          vurl = vdict['hd'] if 'hd' in vdict else vdict['md'] if 'md' in vdict else vdict['sd']
        elif 'vk' in url:
          vurl = re.findall(r'(http[^"(http)]*\.720.mp4)',requests.get(url).text)[0]
      subprocess.call(["screen", "-S", "omx", "-X", "quit"])
      subprocess.Popen(['screen','-dmS','omx','./run/omxplayer','-o','hdmi',vurl])  
      return 'ok - type: url'
    except: return 'error'
  else:
    t = render_template('playr.html')
    return t

if __name__ == "__main__":
    #app.run(host='127.0.0.1',port=8092,debug=True)
    WSGIServer(app).run()
